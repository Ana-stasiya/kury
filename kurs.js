
// /*1) Создайте функцию, которая будет вычислять объем и площадь полной 
// поверхности куба (тоже базовая математика, иногда используется в создании анимаций). 
// Эта функция принимает в себя целое число со значением длины ребра куба. Ответ выведите в формате строки, 
// который изображен в примерах.

// Если в функцию попал неправильный аргумент или вычислить значения невозможно - вернуть строку 
// "При вычислении произошла ошибка"

// НЕ ИСПОЛЬЗУЙТЕ ОПЕРАТОР СТЕПЕНИ ** - в онлайн среде браузера он не работает и 
// есты будут ломаться. Это из-за того, что этот оператор из более нового стандарта, чем тут доступен.

// Примеры:

// calculateVolumeAndArea(5)  => 'Объем куба: 125, площадь всей поверхности: 150'

// calculateVolumeAndArea(15)  => 'Объем куба: 3375, площадь всей поверхности: 1350'

// calculateVolumeAndArea(15.5)  => 'При вычислении произошла ошибка'

// calculateVolumeAndArea('15')  => 'При вычислении произошла ошибка'

// calculateVolumeAndArea(-15)  => 'При вычислении произошла ошибка'*/

// // Место для первой задачи
// function calculateVolumeAndArea(a){

//     if (a<0 || typeof(a) !== 'number' || !Number.isInteger(a) || a%1!=0){
//         console.log('При вычислении произошла ошибка')
//     } else {
//         let ob=0;
//         let pl=0;
//         ob=a*a*a;
//         pl=6*(a*a);
//         return `Объем куба: ${ob}, площадь всей поверхности: ${pl}`;

//     }
// }
// calculateVolumeAndArea(15.5);


// /*2) Постепенно переходим к более реалистичным задачам :)
//  Вы обнаружите, что там используется все тоже самое.
// Напишите функцию, которая будет определять номер купе по переданному ей номеру места. Наглядно:
// Функция принимает только целое число от 1 до 36.
// Если переданный аргумент не число, отрицательное или дробное - возвращается сообщение:
// "Ошибка. Проверьте правильность введенного номера места"
// Если число 0 или больше 36, то сообщение: "Таких мест в вагоне не существует"
// Пример:
// getCoupeNumber(33)  => 9
// getCoupeNumber(7)  => 2
// getCoupeNumber(300)  => "Таких мест в вагоне не существует"
// getCoupeNumber(0)  => "Таких мест в вагоне не существует"
// getCoupeNumber(7.7)  => "Ошибка. Проверьте правильность введенного номера места"
// getCoupeNumber(-10)  => "Ошибка. Проверьте правильность введенного номера места"
// getCoupeNumber('Hello')  => "Ошибка. Проверьте правильность введенного номера места"*/

// // Место для второй задачи
// function getCoupeNumber(a) {
// if (typeof a === 'string' || a%1 != 0 ){
//     return '"Ошибка. Проверьте правильность введенного номера места"';
// } else {
//     switch(a){
//         case 1: 
//         case 2:
//         case 3: 
//         case 4:
//         return '1 купе';
//         break;
//         case 6: 
//         case 8:
//         case 5: 
//         case 7:
//             return '2 купе';
//         break;
//         case 10: 
//         case 12:
//         case 9: 
//         case 11:
//             return '3 купе';
//         break;
//         case 14: 
//         case 16:
//         case 13: 
//         case 15:
//             return '4 купе';
//         break;
//         case 18: 
//         case 20:
//         case 17: 
//         case 19:
//             return '5 купе';
//         break;
//         case 22: 
//         case 24:
//         case 21: 
//         case 23:
//             return '6 купе' ;
//         break;
//         case 26: 
//         case 28:
//         case 25: 
//         case 27:
//             return '7 купе';
//         break;
//         case 30: 
//         case 32:
//         case 29: 
//         case 31:
//             return '8 купе';
//         break;
//         case 34: 
//         case 36:
//         case 33: 
//         case 35:
//             return '9 купе';
//         break;

//         default: return 'таких мест не существует';
//     }

// }
// }

// getCoupeNumber(4);


// Место для первой задачи
function getTimeFromMinutes(min) {
    // проверка на ошибки
    if (min<0 || typeof(min)!== 'number' || min %1 !== 0){
         console.log('Ошибка, проверьте данные');
    } else { //расчет минут и часов
        let chas=Math.floor(min/60);
        let minuta=min%60
        if (chas>=2 && chas < 5 ){ // по времени часа и часов 
         console.log(`Это ${chas} часа и ${minuta} минут`);
    } else if (chas==1) { 
        console.log(`Это ${chas} час и ${minuta} минут`);
    }  else { console.log(`Это ${chas} часов и ${minuta} минут`)}

}}
getTimeFromMinutes(600);

// Место для второй задачи
function findMaxNumber(a,b,c,d) {
let max=a;
    for (let i=0;i<=4;i++){
    if (max>b) max=b;
}
}

console.log(findMaxNumber(1,2,3,4));